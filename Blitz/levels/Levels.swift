//
//  Levels.swift
//  Arc
//
//  Created by Keith C on 1/22/19.
//  Copyright Â© 2019 Keith C. All rights reserved.
//

import Foundation
import SpriteKit
import GameplayKit
import AudioToolbox
import UIKit

class Levels: SKScene, SKPhysicsContactDelegate {
    
    ////////////////////////////////////--- VARS ---/////////////////////////////////////////////////////////////////////
    
    //bool to check if game is still going on
    var isGameOver = false
    
    //player
    var player = SKSpriteNode()
    
    var playerSpeedMax = CGFloat(20.0)
    var playerSpeedCur = CGFloat(0)
    var playerDrag = CGFloat(0.5)
    var angle = CGFloat(0.0)
    var vx = CGFloat(0.0)
    var vy = CGFloat(0.0)
    //creates the player particle as an emitter
    var playerPart = SKEmitterNode(fileNamed: "playerPart")
    
    //ENEMY
    var enemySpeed = CGFloat(7.5)
    //enemy levels
    //set 1
    var level1 = [100,600, 0,900, -200,1500, 300,2100, 0,2500]
    var level2 = [100,600, 0,700, -200,800, 300,900, 0,1000, 0,1300]
    var level3 = [-350,600, -250,700, -150,800, -50,900, 50,1000, 150,1100, 350,1350, 250,1450, 150,1550, 50,1650, -50,1750, -150,1850, -350,2100, -250,2200, -150,2300, -50,2400, 50,2500, 150,2600]
    var level4 = [-325,2000, -225,1850, -125,1700, 325,1700, 225,1550, 125,1400, -225,1100, -75,1100, -325,900, 50,400]
    var level5 = [-200,2000, -75,2000, 50,2000, 175,2000, -275,1700, 50,1700, 0,1400, 300,1400, -275,1100, 50,1100]
    var level6 = [-200,2000, 300,2000, 100,1950, 50,1750, 0,1500, 150,1400, -325,1300, 25,1200, -175,1600, -325,2000]
    var level7 = [-325,1400, -75,1400, 50,1400, 175,1400, 300,1400, -325,1700, -200,1700, 50,1700, 175,1700, 300,1700, -325,2000, -200,2000, -75,2000, 50,2000, 300,2000]
    var level8 = [-325,600, -225,700, -125,800, 325,600, 225,700, 125,800, -200,1100, -75,1100, 50,1100, 175,1100, -325,1600, -200,1600, -75,1600, 50,1600, 300,1600]
    var level9 = [0,1100, 0,1250, 0,1400, 0,1550, 0,1700, 0,1850, 0,2000, 0,2150, 0,2300,
                  -325,1100, -175,1350, -325,1700, -175,1950,
                  325,1100, 225,1200, 200,1700, 125,1800, 325,2000,225,2100]
    var level10 = [287,784, 140,894, 12,997, -259,1277, 55,1317, 271,1461, 40,1674, -207,1849, 295,1959, 252,1717 ]
    var level11 = [327,1927, 84,1688, -58,1558, -252,1353, -146,1093, 52,999, 209,895, 322,806, 164,1339]
    var level12 = [338,1948, 108,1681, -221,1369, 10,1136, 278,940, -162,774]
    var level13 = [324,1907, 135,1709, -116,1476, -250,1528, 226,1205, 58,1053, -121,878, -297,742, 307,1489, -207,1768]
    var level14 = [341,1970, 204,1830, 73,1703, -62,1574, -268,1277, -146,1154, -33,1055, 62,1033, 160,1036, 147,1468, -282,1843, -136,1954, 349,740]
    var level15 = [79,1729, 13,1580, -49,1408, -123,1223, -193,1057, -257,876]
    var level16 = [-315,1844, -62,1512, 126,1485, 286,1466, -327,1342, -174,1123, -317,977, -290,777, -174,1240, -39,1632, 267,854]
    var level17 = [-340,1944, -258,1808, -161,1652, -53,1487, 62,1322, 27,1929, 171,1922, 279,1754, 68,986, 243,975, -331,1263, -248,1054]
    var level18 = [-322,1923, -142,1615, 86,1399, 206,1124, -212,821, -275,1043, -26,1202, -88,1362, -320,1504, 206,1826, -120,1916, 232,1532, 270,732]
    var level19 = [-355,1149, -304,1122, -261,1072, -219,1021, -210,924, -223,887, -261,824, -317,767, -342,726, 334,1136, 282,1067, 239,956, 226,842, 282,720, -164,1472, -86,1397, 11,1293, 140,1263, 251,1288, -367,1654, -315,1716, -239,1768, -203,1823, -174,1900, -142,1931, -77,1931, 21,1911, 43,1884]
    var level20 = [274,766, 255,788, 241,808, 224,828, 208,848, 195,876, 183,898, 166,918, 144,932, 132,957, 128,955, 88,956, 48,943, 23,930, 13,910, -1,881, -366,1051, -305,1095, -243,1128, -168,1152, -76,1163, -6,1192, 20,1222, 24,1253, 21,1294, 8,1318, -15,1318, -40,1311, -72,1342, -72,1392, -15,1414, 44,1446, 107,1473, 345,1584, 338,1607, 320,1648, 306,1677, 294,1676, 274,1680, 263,1706, 271,1737, 303,1758, 296,1786, 284,1812, 254,1825, 234,1840, 210,1844, 157,1851, 131,1840, 113,1795, 75,1746, -64,1824, -89,1837, -131,1843, -154,1820, -159,1750, -159,1686, -158,1603, -360,1983]
    //set 2
    var level21 = [-477,539, -635,401, -824,194, -968,48, -652,-245, -578,-428, -718,278, -458,-597]
    var level22 = [-471,50, -559,197, -650,293, -548,-92, -623,-212, -476,576, -486,-505, -1077,333, -967,450, -882,563, -847,3, -1034,-324, -890,-494, -1564,541, -1548,367, -1696,236, -1826,70, -1313,-8, -1433,-163, -1529,-304, -1649,-451, -1760,-581]
    var level23 = [-459,388, -500,287, -557,228, -619,228, -658,264, -669,349, -708,416, -768,374, -799,293, -828,231, -874,120, -864,147, -956,80, -987,104, -1047,169, -1062,197, -1091,246, -1110,279, -1115,285, -980,551, -1107,-603, -1016,-505, -919,-448, -827,-410, -755,-388, -1096,-188, -1231,639, -1578,416, -1793,208, -1585,-47, -1344,-345, -1759,-517, -1812,-273, -1280,190]
    var level24 = [-1080,654, -1080,631, -1080,581, -1080,574, -1082,520, -1082,490, -1082,446, -1082,405, -1082,351, -1005,296, -901,196, -918,208, -937,226, -948,242, -973,271, -999,289, -1027,293, -807,106, -829,122, -846,151, -867,175, -1114,39, -1057,-40, -1026,-88, -984,-144, -932,-207, -861,-281, -1113,-405, -1045,-495, -970,-576, -445,-122, -434,-545]
    var level25 = [692,-497, -1028,600, -636,155, -904,-404, -1083,81, -516,-504, -1580,374, -1521,-282, -1354,15, -1779,142, -1225,634, -1845,-528]
    var level26 = [-479,226, -503,144, -525,112, -544,56, -546,5, -546,-26, -498,-76, -489,-96, -433,-141, -600,637, -633,630, -659,604, -673,554, -676,522, -820,-122, -843,-168, -849,-220, -889,-302, -877,-350, -868,-418, -794,-464, -1101,-332, -1119,-382, -1119,-382, -1105,-484, -1093,-471, -1058,-564, -994,-622, -985,529, -1014,446, -1040,378, -1041,321, -1023,271, -973,227, -891,178]
    var level27 = [-583,454, -648,367, -716,293, -785,220, -847,143, -909,68, -915,463, -828,386, -758,308, -681,223, -625,162, -546,100, -933,-51, -885,-23, -985,-166, -870,-274, -914,-143, -912,-267, -1106,-496, -1863,88, -1772,111, -1744,142, -1668,186, -1569,175, -1504,173, -1433,103, -1315,46, -1385,29, -1210,75, -1231,92, -1407,-313, -1459,-381, -1507,-445, -1564,-538]
    var level28 = [-603,612, -716,621, -823,593, -951,565, -1022,493, -1040,426, -1061,319, -1067,184, -1070,73, -1067,-74, -1052,-187, -1017,-320, -946,-422, -878,-503, -778,-583, -646,-589, -482,-589, -447,398, -566,335, -638,281, -686,230, -721,195, -763,140, -812,46, -768,-31, -693,-102, -588,-165, -473,-251, -413,-327, -413,-411, -421,-498]
    var level29 = [-1113,-338, -1036,-424, -930,-520, -905,-68, -831,-127, -729,-207, -699,-437, -624,-500, -509,-605, -1102,-45, -1037,631, -550,630, -1111,464, -751,536, -906,254, -609,316, -1103,166,
        -450,0, -600,0, -750,0, -900,0, -1050,0, -1200,0]
    var level30 = [-784,652, -853,563, -751,458, -870,331, -1037,85, -1073,-174, -983,-343, -871,-468, -894,-438, -766,-582, -792,-550, -936,-387, -810,-530, -829,-507, -581,29, -1633,323, -1658,393, -1656,467, -1607,551, -1540,568, -1463,581, -1405,583, -1327,574, -1266,507, -1706,-506, -1739,-455, -1765,-402, -1757,-328, -1731,-260, -1700,-246, -1605,-208, -1502,-202, -1522,-214, -1403,-255, -1428,-239]
    var level31 = [-708,52, -830,253, -932,382, -972,421, -858,309, -845,-254, -747,184, -872,-348, -919,-385, -958,-428, -1114,-83, -1110,649, -1744,411, -1657,347, -1592,270, -1524,165, -1547,72, -1563,-26, -1599,-115, -1629,-181]
    var level32 = [-686,666, -983,293, -1044,484, -663,-190, -879,-180, -971,-458, -1073,-611, -488,-607, -1086,38, -589,251, -1509,616, -1762,375, -1525,-232, -1577,-636, -1763,-516, -1782,-170, -1297,213, -1825,94, -1247,-476]
    var level33 = [-737,233, -726,170, -672,96, -647,28, -595,-64, -550,-137, -505,-204, -472,-269, -451,-359, -412,-454, -381,-578, -380,-550, -387,-539, -827,649, -877,606, -909,559, -948,516, -980,479, -1020,412, -1050,361, -1084,286, -1103,245, -1111,158, -1165,-610, -1232,-552, -1242,-524, -1276,-464, -1320,-421, -1337,-379, -1390,-317, -1408,-241, -1444,-149, -1441,-83, -1470,43, -1448,-31, -1492,71, -1494,145, -1525,198, -1544,260, -1654,658, -1764,550, -1728,578, -1777,489, -1805,470, -1847,387, -1859,352, -1862,280, -1863,203, -1854,112, -1843,53, -1832,4, -1795,-69, -1764,-128]
    var level34 = [-150,300, -150,100, -150,200, -150,600, -150,700, -150,-400, -150,-500, -150,-600, -150,-300, -150,-200, -500,500, -500,400, -500,300, -500,100, -500,0, -500,-100, -500,-200, -500,-300, -800,500, -800,600, -800,700, -800,100, -800,0, -800,-500, -800,-400, -800,-600, -1000,300, -1000,-200, -1000,600, -1000,-600, -1350,500, -1350,300, -1350,-100, -1350,-400]
    var level35 = [650,400, 50,400, -50,300, -50,200, 50,100, 250,-300, 150,-400, 150,-500, 250,-600, -250,-100, -250,-300, -250,-200, -250,600, -600,500, -800,500, -900,-300, -800,100, -600,-500, -600,-100]
    var level36 = [150,200, 150,-200, 150,100, -150,-100, -150,500, 150,700, 150,-600, -150,-500, -350,100, -700,100, -700,400, -700,700, -700,-600, -900,-300, -500,-300, -900,300, -800,400, -900,600, -900,500, -800,700, -800,-200]
    var level37 = [-350,100, -250,100, -150,100, -50,100, -250,-400, -150,-300, -250,300, -150,400, -350,200, -350,-500, -400,100, -500,100, -600,100, -700,100, -800,100, -900,100, -1000,100, -1100,100, -500,700, -600,600, -600,0, -700,-100, -800,-200, -600,-200, -1000,-400, -700,-600, -1000,-500, -1000,-600, -900,200, -800,300, -700,300, -700,600, -800,600, -900,600, -1000,500]
    var level38 = [-150,0, -150,-100, 150,200, 150,100, 50,600, 50,500, 50,-400, 50,-500, -250,500, -250,400, -350,-400, -350,-500, -800,600, -800,500, -900,200, -900,100, -500,200, -500,100, -700,-300, -700,-400, -1000,-400, -1000,-500, -400,600, -400,500, -1100,-100, -1100,-200, -700,400, -800,0]
    var level39 = [-50,500, -150,100, 50,-200, 50,-500, -150,-500, 50,200, -150,300, 250,600, 350,-600, -250,-400, -900,-300, -900,-200, -900,-100, -1000,200, -900,400, -700,500, -700,600, -900,-600, -500,-100, -500,-400, -700,100, -1100,-500, -1000,-600, -900,300, -800,500, -1550,700, -1550,600, -1550,500, -1550,400, -1550,300, -1550,-600, -1550,-500, -1550,-400, -1550,-300, -1550,-200, -1550,200, -1550,-100, -1450,200, -1350,200, -1450,-100, -1350,-100]
    var level40 = [-250,300, -250,-100, -150,200, -150,0, -50,100, -50,500, -150,600, -250,700, -250,-600, -150,-500, -50,-400, -150,-300, -250,-200, -700,600, -700,500, -700,400, -600,600, -800,200, -800,100, -800,0, -700,0, -700,-600, -600,-500, -500,-400, -1000,-200, -900,-300, -900,-400, -1000,500, -900,500, -1450,400, -1350,500, -1550,-500, -1450,-600, -1350,-600, -1550,-400, -1350,0, -1250,-100, -1750,500, -1650,400, -1550,300, -1750,0, -1650,-100, -1750,-500]
    //set 3
    var level41 = [-300,600, -300,400, -300,500, -200,600, -100,600, 0,600, 100,600, 100,500, 100,400, -200,300, -200,200, -200,100, 100,300, 100,200, 100,100, -200,-300, -100,-300, 0,-300, 100,-300]
    var level42 = [100,0, 0,100, 200,-100, 300,-200, -300,100, -200,-100, 0,-300, -300,0, -300,200, 0,600, -100,600]
    var level43 = [-400,200, -300,200, -100,200, -200,200, 200,200, 300,200, -400,500, -300,500, -200,500, 100,500, 200,500, 300,500, -400,-100, -100,-100, 100,-100, 0,-100, 200,-100]
    var level44 = [-200,400, -100,300, 0,200, 100,300, 200,400, -400,200, -300,100, -400,0, 300,400, -200,-300, 0,-200, -100,-200, 100,-100, 200,-100]
    var level45 = [-150,300, -150,0, 150,300, 150,0, -150,200, -150,100, 150,200, 150,100, -250,600, 350,600, 250,600, -350,600, -250,-300, 250,-300, -50,-500, 50,-500, -50,-100, 50,-100]
    var level46 = [-150,500, -50,400, 50,300, 150,0, 250,-100, 350,-200, -250,-100, -150,-200, -50,-400, 50,-500, 150,600, 250,500, -250,300, -150,200]
    var level47 = [-350,200, -250,300, -150,400, -150,500, -150,-100, -50,-100, -250,-100, -350,-100, 350,-100, 250,-100, 150,-400, 50,-400, 350,-200, -250,-200, -150,-300, -50,-400, 50,200, 150,200, 250,100, 350,0, 250,700, 350,600]
    var level48 = [-150,500, -150,300, -150,400, -250,300, -250,200, 150,500, 150,400, 150,300, 250,200, 250,300, -150,100, 150,100, 150,0, -50,-100, -150,0, -50,-200, -50,600, 150,-500, 250,-400, 250,-300, 250,-200, -150,-400, -150,-300]
    var level49 = [-150,500, -150,400, -50,300, 50,300, 150,400, 150,500, 250,600, 350,700, -350,600, -350,100, -150,100, -250,100, 250,200, 150,100, 150,0, 150,-200, 150,-100, 50,-200, -50,-200, -350,-200, -350,-100, -250,0, -250,-500, -250,-400, -50,-500, -150,-500]
    var level50 = [-150,600, -250,500, -150,400, -50,300, 50,200, 150,100, 350,-100, 250,-200, -50,600, 150,600, 50,600, 250,600, 250,500, -50,-100, -50,-200, -50,200, -50,100, -50,0, -250,100, -50,-500, 50,-500, 150,-500, 250,-500, 350,-300, 350,-400, -250,-400]
    var level51 = [-350,700, -350,600, -350,500, -350,400, -350,300, -350,200, -250,100, -350,100, -350,0, -350,-100, -350,-200, -350,-300, -350,-400, -350,-500, -350,-600, 350,700, 350,600, 350,500, 350,400, 350,300, 350,200, 350,100, 350,-100, 350,0, 350,-200, 350,-300, 350,-400, 350,-500, 350,-600, -150,200, -50,300, 250,400, 150,500, -250,600, -150,600, -150,-200, -50,-200, 50,-200, 250,0, -250,-300]
    var level52 = [-150,500, -150,400, -50,200, -50,300, 50,100, 50,0, 50,600, 150,500, 250,500, 350,400, 350,300, 350,200, 350,100, 350,0, 350,-100, 250,-200, 150,-300, 50,-400, -50,-500, -150,-500, -250,-500, -250,-400, -250,-400, -250,-300, -250,-200, -250,-100, -250,0, -150,300, -250,200, -250,100]
    var level53 = [-250,600, -250,400, -250,500, -150,600, -50,600, 150,600, 50,600, 250,500, 250,400, 250,300, 150,200, 50,100, -250,300, -250,200, -50,0, -350,100, -350,0, -350,-100, -250,-200, 50,-100, 150,-200, -150,-300, -50,-400, 250,-300, 250,-400, 250,-500, 150,-600, 50,-500]
    var level54 = [50,500, 150,600, 250,600, 350,600, 350,500, 350,400, 350,300, 250,200, 50,400, -50,300, 150,100, -150,200, -150,100, -50,-100, -50,0, 250,0, 50,-200, 350,-100, 350,-200, 350,-300, 350,-400, 350,-500, 250,-500, 250,-500, 150,-500, 150,-500, 50,-500, -50,-500, -150,-500, -250,-500, -250,-500, -350,-500, -250,-400, -350,-300]
    var level55 = [-103,600, -103,700, -103,500, -103,400, -103,300, -103,200, -103,100, -103,0, -103,-100, -103,-200, -103,-300, -103,-400, -103,-500, -103,-600, 103,600, 103,700, 103,500, 103,400, 103,300, 103,200, 103,100, 103,0, 103,-100, 103,-200, 103,-300, 103,-400, 103,-500, 103,-600]
    var level56 = [-150,600, 50,300, -50,200, -50,-200, 250,-100, 350,400, 350,600, -250,200, -250,100, -250,-100, -150,0, -250,0, -250,-200, 50,-600, 150,-600, 250,-600, 250,-500, 150,-500, 250,-400, 250,100, 150,0, 250,600]
    var level57 = [-150,500, -50,300, 50,400, 150,500, -50,600, -250,0, -150,0, -50,0, 350,0, 250,0, 350,-100, 250,-300, 250,-200, 150,-400, 150,300, 250,200, 250,100, -250,-100, -250,-300, -250,-200, -150,-400, 150,200]
    var level58 = [-150,600, -150,300, 0,200, 50,-100, -50,-200, -150,-100, -150,200, 350,-100, 250,-400, 50,-500, -150,-500, 250,500, 250,300, 250,400, 250,200, -250,300, 50,500, -250,200, -350,200, 350,200, -250,-100, -350,-100]
    var level59 = [-150,500, 50,200, -50,-500, -250,0, -50,-100, 150,100, 250,-300, -150,-400, -250,-300, 350,-100, -250,300, -250,400, 250,500, 250,400, -150,400]
    var level60 = [-50,600, -50,300, -50,0, 50,600, 50,300, 50,0, -50,-400, 50,-400, -250,100, 250,500, 250,-200]
    //set 4
    var level61 = [-250,1834, -350,1634, -250,1434, -250,1234, 350,1834, 250,1634, 350,1334, 350,1434, 350,1534, 150,1134, 50,1834, -50,834]
    var level62 = [-250,1934, -150,1534, 250,1834, 150,1234, -250,934, -250,3268, 250,3168, -150,2868, 150,2568, -250,2268]
    var level63 = [-250,600, -50,300, 150,300, 250,600, -150,100, 50,-300, -250,-200, -150,1834, -50,1634, 150,1634, 250,1934, -150,1434, -250,1134, 50,1034, -250,3268, -150,3168, 250,3268, 150,2968, 50,2968, -150,2768, -250,2468, 50,2368, 250,2668]
    var level64 = [-250,1934, -150,1834, -50,1734, 50,1534, -50,1434, -150,1334, 50,1234, 150,1134, 250,1934, 250,1834, 250,834]
    var level65 = [-150,1834, -50,1734, -50,1634, -150,1434, -50,1334, -50,1234, 250,1934, 350,1834, 250,1734, 350,1634, 250,1534, 350,1434, 250,1334, -250,934, 150,934]
    var level66 = [-350,1934, -350,2034, -350,1834, -350,1734, -350,1634, -350,1534, -350,1434, -350,1334, -350,1234, -350,1134, -350,1034, -350,934, -350,834, -350,734, 350,1934, 350,2034, 350,1834, 350,1734, 350,1634, 350,1534, 350,1434, 350,1334, 350,1234, 350,1134, 350,1034, 350,934, 350,834, 350,734, -150,1834, 150,1534, -50,1234, 150,934, 250,1934, -350,600, -350,700, -350,500, -350,400, -350,300, -350,200, -350,100, -350,0, -350,-100, -350,-200, -350,-300, -350,-400, -350,-500, -350,-600, 350,700, 350,600, 350,500, 350,400, 350,300, 350,200, 350,100, 350,-100, 350,0, 350,-200, 350,-300, 350,-500, 350,-400, 350,-600]
    var level67 = [-150,300, -150,-200, 250,300, 250,-200, 150,-100, -50,200, -150,600, 250,600, -150,934, -50,934, 150,934, 50,934, 150,1334, 250,1234, -250,1334, -250,1234, -50,1634, 50,1734, 150,1834]
    var level68 = [50,-300, 50,-200, 50,-100, 250,-100, 150,-100, 350,-200, -150,400, -50,300, 50,200, -250,500, -350,600, 150,600, 250,600]
    var level69 = [-250,1934, -50,1534, 50,1134, 250,1834, 50,1534, -250,1234, 250,834, -250,834, -250,3268, -50,2868, 50,2868, 250,3168, -250,2568, 50,2468, -250,2168, 250,2168]
    var level70 = [-50,1834, -150,1434, 150,1434, 50,1234, -50,1034, -150,1234, -250,1534, 50,1534, 350,1834, 250,1834]
    var level71 = [-150,1834, -150,1434, -150,1034, 250,1834, 250,1434, 250,1034, 50,1634, 50,1234, -350,1634, -350,1134]
    var level72 = [-350,600, -250,600, -150,600, -50,600, 50,600, 150,600, 250,300, 150,300, 50,300, -50,300, -150,200, -150,100, -250,-400, 50,-400, 350,300, 250,-100]
    var level73 = [-250,500, -150,400, -50,300, 350,300, 250,200, 150,100, -50,-100, 50,-200, 150,-300, -150,-400, -250,-500, -350,-600, -250,1834, -150,1734, -50,1634, 350,1634, 250,1534, 150,1434, -50,1234, 50,1134, 150,1034, -150,934, -250,834, -350,734, -250,3168, -150,3068, -50,2968, 350,2968, 250,2868, 150,2768, -50,2568, 50,2468, 150,2368, -150,2268, -250,2168, -350,2068]
    var level74 = [-250,1834, -150,1834, -50,1834, 350,1834, 250,1834, -350,1834, 50,1534, 150,1534, -350,1234, -50,1234, 50,1234, 150,1234, 250,1234, 350,1234, -250,934, -150,934]
    var level75 = [0,1934, 0,1834, 0,1534, 0,1434, -250,1334, -250,1234, -250,934, -250,834, 250,1334, 250,1234, 250,934, 250,834, -250,2668, -250,2568, -250,2268, -250,2168, 250,2668, 250,2568, 250,2268, 250,2168]
    var level76 = [-250,1934, -150,1934, 250,1934, 150,1934, -150,1634, 150,1634, -50,1634, 50,1634, -250,1334, -150,1334, 150,1334, 250,1334, -150,1034, -50,1034, 50,1034, 150,1034, -250,734, -150,734, 150,734, 250,734]
    var level77 = [-350,1834, -250,1834, -150,1834, -50,1834, 50,1834, 350,1534, 250,1534, 150,1534, 50,1534, -50,1534, -350,1234, -250,1234, -150,1234, -50,1234, 50,1234, 350,934, 250,934, 150,934, 50,934, -50,934,]
    var level78 = [-250,1834, -50,1534, -50,1134, -50,734, 150,734, 150,1234, 350,1734, 250,1934, -250,1434, -250,834, -50,2868, -250,2768, -50,2468, 150,2568, -250,2168, -50,2068, 150,2068, 350,3068, 250,3268, -250,3168]
    var level79 = [0,1734, 0,1434, 0,1134, 250,1934, 250,1734, 250,1234, 250,1034, 250,1834, 250,1134, -250,1934, -250,1834, -250,1734, -250,1234, -250,1134, -250,1034, -150,2268, -50,2268, 50,2268, 150,2268]
    var level80 = [-350,700, -350,600, -350,500, -350,400, -350,300, -350,200, -350,100, -350,0, -350,-100, -350,-300, -350,-200, -350,-400, -350,-500, -350,-600, -250,-600, -150,-600, -50,-600, 50,-600, 150,-600, 250,-600, 350,-600, 350,-500, 350,-400, 350,-300, 350,-200, 350,-100, 350,0, 350,100, 350,200, 350,300, 350,400, 350,500, 350,600, 350,700, -250,700, -150,700, -50,700, 50,700, 150,700, 250,700,-350,700, -350,600, -350,500, -350,400, -350,300, -350,200, -350,100, -350,0, -350,-100, -350,-300, -350,-200, -350,-400, -350,-500, -350,-600, -250,-600, -150,-600, -50,-600, 50,-600, 150,-600, 250,-600, 350,-600, 350,-600, 350,-500, 350,-500, 350,-400, 350,-300, 350,-200, 350,-100, 350,0, 350,100, 350,200, 350,300, 350,400, 350,500, 350,600, 350,600, 350,700, -250,700, -150,700, -50,700, 50,700, 150,700, 250,700, 250,-100, 150,-100, -250,-500, -150,-400, -250,0, -150,0, 150,300, 250,300, -250,500, -150,500]
    //set 5
    var level81 = [-150,-834, 50,-1334, 250,-734, -250,-1734, 350,-1734, -150,-1434]
    var level82 = [-250,200, -150,200, 250,200, 150,200, -50,-300, 50,-300, 150,-200, -150,-200, -250,-600, 250,-600, -150,-834, -50,-934, 150,-1134, 250,-1234, 50,-1434, 50,-1534, -250,-1334, -150,-1434, -50,-1634, -50,-1534]
    var level83 = [-150,-934, -50,-1034, 150,-1234, 250,-1334, -250,-1434, -150,-1534, 50,-1734, 150,-1834, -50,-634, 250,-634, -250,-834, 250,-1934]
    var level84 = [-150,-1634, -150,-1734, -50,-1534, 50,-1534, 150,-1634, 150,-1734, -350,-1334, -250,-1234, 350,-1334, 250,-1234, -150,-834, -50,-834, 50,-834, 150,-834]
    var level85 = [-150,-734, -150,-1234, 150,-934, 150,-1534, -250,-934, 350,-1234, -150,-1734, 150,-1834, -250,-1534, -150,-2068, 150,-2268, -250,-2268, -150,-2568, 350,-2568, 150,-2868, -250,-2868, -150,-3068, 150,-3168]
    var level86 = [-150,400, -150,300, 250,200, 250,100, 50,0, 50,-200, 50,-100, 150,0, -50,-300, -250,200, -250,100, -350,0, -250,-100, -350,-200, -350,-300, 50,-400, 350,300, -150,-834, 250,-834, 250,-934, -150,-1034, -150,-934, 250,-1034, 50,-1234, 50,-1334, 150,-1434, 250,-1534, -250,-1334, -250,-1434, -150,-1534, 50,-1834, 250,-1834, 150,-1834]
    var level87 = [-50,200, -250,-100, -50,-200, 350,0, 250,-100, 250,-300, -50,-500, -250,-934, 50,-1034, 250,-834, -150,-1234, -50,-1434, -250,-1734, 350,-1734]
    var level88 = [-150,0, -50,0, 150,200, -250,300, 250,300, 350,400, -150,-400, -50,-400, 50,-400, 150,-400, 50,-100, -50,-200, 50,-300, -250,-934, -150,-1034, 350,-934, 250,-1034, 250,-1234, 250,-1434, 250,-1634, 50,-1234, 50,-1434, 50,-1634, -250,-1934, -150,-1934, -250,-1434, -250,-1334, -250,-1534, 150,-1834]
    var level89 = [-150,400, -150,0, 150,-400, -50,300, 50,200, 150,100, 150,-200, 250,-500, 150,-300, -150,-400, -250,-500, -150,-934, -50,-1034, 50,-1034, 150,-1034, 250,-934, 350,-834, -250,-1434, -150,-1434, -50,-1434, 50,-1534, 50,-1834, 50,-1934]
    var level90 = [-250,-834, -150,-934, 50,-1134, 150,-1234, -250,-1234, -150,-1334, 50,-1534, 150,-1634, 350,-1434, 350,-1834, -250,-1634, -150,-1734, 50,-1934, 50,-734, 150,-834, 50,-2068, 150,-2168, -250,-2168, -150,-2268, 50,-2468, 150,-2568, 350,-2768, -250,-2568, -150,-2668, 50,-2868, 150,-2968, 350,-3168, 50,-3268, -250,-2968, -150,-3068]
    var level91 = [-250,-734, -150,-834, -50,-934, 350,-734, 250,-734, 250,-1234, 350,-1234, -150,-1234, -50,-1334, 250,-1534, 150,-1634, -250,-1634, -50,-1834, -150,-2268, -50,-2268, 50,-2268, 250,-2268, 150,-2268, 350,-2268, -350,-2668, -250,-2668, -150,-2668, -50,-2668, 50,-2668, 150,-2668]
    var level92 = [-50,100, 50,100, -150,-300, 250,-300, 150,-300, 50,-600, -250,-934, 250,-934, -150,-1034, 150,-1034, -150,-1334, 150,-1334, -250,-1434, 250,-1434, -50,-1734, 50,-1734, 150,-1734, -150,-1734]
    var level93 = [-250,-734, -250,-834, -250,-934, -150,-934, 150,-834, 250,-834, 250,-934, 250,-1034, -50,-1234, -50,-1334, -50,-1434, 50,-1234, -250,-1634, -250,-1734, -250,-1834, -150,-1834, 250,-1634, 150,-1634, 250,-1734, 250,-1834]
    var level94 = [850,500, -250,600, -150,300, -150,0, -150,-500, 50,-500, 250,-100, 250,500, 50,-100, -250,-300, -150,-934, -150,-1034, -150,-1234, -150,-1634, 150,-1734, 250,-1434, 250,-1634, 350,-934, 350,-734, -50,-1934, -250,-934, -350,-934]
    var level95 = [-250,-100, -150,-300, 50,-500, 150,-400, 250,-300, -250,-200, -150,-834, 150,-834, 250,-834, 250,-934, 250,-1134, 250,-1034, 150,-1234, 50,-1334, -50,-1434, -250,-934, -250,-1034, -250,-1234, -250,-1134, -250,-1634, -250,-1734, -150,-1834, 50,-1534, 150,-1634]
    var level96 = [-250,-200, -150,-500, -150,-300, -150,-400, -50,-500, 250,-400, 350,-300, 250,-200, 150,-100, -150,-734, -50,-834, 50,-934, 250,-1334, 250,-1234, -150,-1234, -250,-1234, -250,-1434, -250,-1734, 150,-1834, 250,-1734, 250,-1634, 50,-1634, 150,-1734, -150,-1834]
    var level97 = [-250,-500, -150,-500, -50,-500, 250,-500, -250,-934, 150,-934, 250,-934, 150,-834, -150,-1134, -50,-1334, 50,-1534, -50,-1434, -150,-1234, -250,-1034, 50,-1934, 50,-1834, 350,-1934, 150,-2168, 150,-2068, 250,-2568, -50,-2068, -50,-2368, -50,-2768, -50,-3168, -50,-3068, 250,-3068, 150,-3068, 50,-3068]
    var level98 = [-50,-100, -50,-200, -50,-400, -50,-500, 350,0, 250,0, -350,0, -250,0, -50,-100, -150,0, -150,-934, -150,-1434, -50,-1534, 50,-1634, -50,-1034, 50,-1134, 350,-934, 250,-834, 250,-734, -250,-934, -250,-934, -350,-934, 250,-1934, 350,-1834, 150,-1834, 150,-1734]
    var level99 = [-150,-400, -50,-400, 250,-500, 250,-400, 250,-300, 250,-200, 150,-100, -250,-400, 150,-700, 150,-700, 150,-600, -250,-934, -50,-1134, 350,-834, 250,-934, 150,-1434, 250,-1334, 350,-1234, -150,-1434, -250,-1734, -150,-1734, -50,-1734, 50,-1734]
    var level100 = [-350,100, -250,100, -150,100, 150,100, 250,100, 450,100, 350,100, -150,0, 150,0, -250,-100, -350,-200, 250,-100, 350,-200, -250,-300, -150,-400, 250,-300, 150,-400, -150,-500, -150,-600, 150,-500, 150,-600, -250,-834, -150,-934, -50,-1034, 250,-1034, 350,-934, -150,-1334, -250,-1434, -250,-1534, 150,-1634, 250,-1534, 150,-1434, -150,-1834, -50,-1934, -250,-2168, -150,-2268, -150,-2468, -150,-2768, 250,-2468, 150,-2568, 350,-2868, 250,-2968, -50,-3068, -150,-3168, 150,-2768, 250,-2268, 150,-2068, 50,-2068]
    //set 6
    var level101 = [0,0]
    var level102 = [0,0]
    var level103 = [0,0]
    var level104 = [0,0]
    var level105 = [0,0]
    var level106 = [0,0]
    var level107 = [0,0]
    var level108 = [0,0]
    var level109 = [0,0]
    var level110 = [0,0]
    var level111 = [0,0]
    var level112 = [0,0]
    var level113 = [0,0]
    var level114 = [0,0]
    var level115 = [0,0]
    var level116 = [0,0]
    var level117 = [0,0]
    var level118 = [0,0]
    var level119 = [0,0]
    var level120 = [0,0]
    
    
    //GOAL
    var goalSpeed = CGFloat(7.5)
    //goal levels
    var goalLevels = [0,3000, 0,1500, -150,2600, 0,2100, -325,2200, 0,2300, 0,2300, 0,2000, 0,2600, 0,2600, 0,2300, 0,2200, 0,2000, 0,2200, -300,1215, 185,1887, 0,2300, 0,2300, 0,2300, 0,2300,
        -923,-478, -1844,-156, -1941,-38, -1415,-5, -2000,0, -1024,-44, -1568,-10, -631,-416, -1500,0, -1564,-382, -1825,81, -1788,566, -1563,-146, -1650,100, -1250,100, -1100,550, -1350,100, -1000,350, -1750,50, -1850,150,
        -100,400, 200,600, -50,650, 0,400, -250,-500, -250,600, -300,450, 50,600, 250,-400, -250,-100, 250,600, -100,50, 150,-500, -50,600, 0,500, -250,400, 250,600, -250,500, 50,600, -250,400,
        0,2000, 0,3500, 0,3500, 50,1934, -50,2034, 50,2200, -150,1934, -50,600, 50,3168, -100,1534, 50,1934, 250,800, 150,3268, 100,1934, 0,2700, 0,1934, 0,2100, 0,3268, 0,2500, 250,400,
        0,-1934, 0,-1834, -250,-1834, 0,-1684, -50,-3400, -250,-1834, 50,-1534, 0,-2100, -250,-1634, -250,-3268, 150,-2968, 0,-1834, 0,-2000, -150,-1834, 250,-1534, 0,-2100, -250,-2568, -50,-1734, -50,-1934, 250,-3268,
        0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0]
    //creates the goal particle as an emitter
    var goalPart = SKEmitterNode(fileNamed: "goalPart")
    
    
    //all level completions 20
    var levelCompletion = [
        false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
        false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
        false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
        false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
        false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false,
        false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]
    
    
    var playedText = SKLabelNode()
    var successText = SKLabelNode()
    
    
    var framecount = 0
    var seconds = CGFloat(0.0)
    
    
    //used to keep track of the current level for replay function
    static var currentLvl = "0"
    
    
    
    /////////////////////////////////--- CREATE ---////////////////////////////////////////////////////////////////////////////
    
    //main
    override func didMove(to view: SKView) {
        
        //scales scene size to screen size
        scene!.scaleMode = .aspectFit
        
        //makes scene physical
        physicsWorld.contactDelegate = self
        
        //calls initializePlayer; sets player physics and player node as well as adds player particles
        initializePlayer()
        
        //creates all enemies in coords array
        createEnemy()
        
        //creates a goal (while circle)
        createGoal()
        
        //creates the amount of times played counter and background
        createPlayed()
        
        let sceneNum = Int(self.name!)!
        //for no fric set 4 turns off playerdrag
        if sceneNum > 60 && sceneNum <= 80 {
            playerDrag = CGFloat(0)
        }
        
    }
    
    //player
    func initializePlayer() {
        
        //creates the playerParticle
        playerPart!.zPosition = CGFloat(2)
        addChild(playerPart!)
        
        //makes the sprite update/draw correctly
        player = self.childNode(withName: "player") as! SKSpriteNode
        
        //player physics
        player.physicsBody?.categoryBitMask = 0
        player.physicsBody?.contactTestBitMask = UInt32(1)
        player.physicsBody?.collisionBitMask = 0
    }
    
    @objc func createEnemy() {
        
        //assigns the coords of each level to a mass array
        var enemyCoords = [level1, level2, level3, level4, level5, level6, level7, level8, level9, level10, level11, level12, level13, level14, level15, level16, level17, level18, level19, level20, level21, level22, level23, level24, level25, level26, level27, level28, level29, level30, level31, level32, level33, level34, level35, level36, level37, level38, level39, level40, level41, level42, level43, level44, level45, level46, level47, level48, level49, level50, level51, level52, level53, level54, level55, level56, level57, level58, level59, level60, level61, level62, level63, level64, level65, level66, level67, level68, level69, level70, level71, level72, level73, level74, level75, level76, level77, level78, level79, level80, level81, level82, level83, level84, level85, level86, level87, level88, level89, level90, level91, level92, level93, level94, level95, level96, level97, level98, level99, level100, level101, level102, level103, level104, level105, level106, level107, level108, level109, level110, level111, level112, level113, level114, level115, level116, level117, level118, level119, level120]
        
        //turns int lst into CGPoint lst
        var newEnemyCoords: [CGPoint] = []
        var sceneNum = Int(self.name!)! - 1
        newEnemyCoords = createEnemies(arr: enemyCoords[sceneNum])
        
        //normalizes sceneNum
        sceneNum += 1
        
        for en in newEnemyCoords {
            let enemyProto : SKSpriteNode!
            
            if sceneNum > 20 && sceneNum <= 40 {
                enemyProto = SKSpriteNode(imageNamed: "enemyHori")
            }
            else if sceneNum > 40 && sceneNum <= 60 {
                enemyProto = SKSpriteNode(imageNamed: "wall")
            }
            else if sceneNum > 80 && sceneNum <= 100 {
                enemyProto = SKSpriteNode(imageNamed: "enemyReverse")
            }
            else {
                enemyProto = SKSpriteNode(imageNamed: "enemy")
            }
            enemyProto.name = "enemy"
            
            //enemy x; keeps enemies from spawning in wall
            enemyProto.position.x = en.x
            
            //enemy y
            enemyProto.position.y = en.y
            
            //gives enemies physics
            enemyProto.physicsBody = SKPhysicsBody(circleOfRadius : enemyProto.size.height/2)
            enemyProto.physicsBody?.categoryBitMask = UInt32(1)
            enemyProto.physicsBody?.collisionBitMask = 0
            
            //add glow
            enemyProto.addGlow()
            
            //adds the child
            addChild(enemyProto)
        }
    }
    
    @objc func createGoal() {
        
        //creates the playerParticle
        goalPart!.zPosition = CGFloat(2)
        addChild(goalPart!)
        
        let sceneNum = Int(self.name!)!
        let newGoalCoords = CGPoint(x: goalLevels[(sceneNum * 2) - 2], y: goalLevels[(sceneNum * 2) - 1])
        
        let goalProto : SKSpriteNode!
        goalProto = SKSpriteNode(imageNamed: "goal")
        goalProto.name = "goal"
        goalProto.position.x = newGoalCoords.x
        goalProto.position.y = newGoalCoords.y
        goalProto.physicsBody = SKPhysicsBody(circleOfRadius : goalProto.size.height/2)
        goalProto.physicsBody?.categoryBitMask = UInt32(1)
        goalProto.physicsBody?.collisionBitMask = 0
        
        //add glow
        goalProto.addGlow()
        
        //adds the child
        addChild(goalProto)
        
    }
    
    func createPlayed() {
        //draws the played count background
        let playedBackGround = SKShapeNode(rect:CGRect(x: -self.size.width/2 + 30 ,y: self.size.height / 2 - 110 ,width:100,height:60), cornerRadius: 25)
        playedBackGround.zPosition = 4
        playedBackGround.fillColor = Colors.blitzYellow.withAlphaComponent(0.8)
        playedBackGround.strokeColor = SKColor.black
        addChild(playedBackGround)
        
        //sets played to 0 if no previous played record
        if UserDefaults.standard.object(forKey: "played" + self.name!) as? Int == nil {
            UserDefaults.standard.set(1, forKey: "played" + self.name!)
        }
        else {
            let currentPlayed = UserDefaults.standard.object(forKey: "played" + self.name!) as? Int
            UserDefaults.standard.set(currentPlayed! + 1, forKey: "played" + self.name!)
        }
        //initializes played count text
        playedText.text = String(UserDefaults.standard.object(forKey: "played" + self.name!) as! Int)
        playedText.removeAllChildren()
        playedText.name = "played"
        playedText.fontName = "AvenirNext-Bold"
        playedText.fontColor = SKColor.white
        playedText.position = CGPoint(x: -self.size.width/2 + 80, y: self.size.height / 2 - 95)
        playedText.fontSize = 35
        playedText.zPosition = 4
        addChild(playedText)
        
        //draws the success count background
        let successBackGround = SKShapeNode(rect:CGRect(x: self.size.width/2 - 30 - 100 ,y: self.size.height / 2 - 110 ,width:100,height:60), cornerRadius: 25)
        successBackGround.zPosition = 4
        successBackGround.fillColor = Colors.blitzCyan
        successBackGround.strokeColor = SKColor.black
        addChild(successBackGround)
        
        //sets played to 0 if no previous sucess record
        if UserDefaults.standard.object(forKey: "success" + self.name!) as? Int == nil {
            UserDefaults.standard.set(0, forKey: "success" + self.name!)
        }
        
        //initializes success count text
        successText.text = String(UserDefaults.standard.object(forKey: "success" + self.name!) as! Int)
        successText.removeAllChildren()
        successText.name = "success"
        successText.fontName = "AvenirNext-Bold"
        successText.fontColor = SKColor.white
        successText.position = CGPoint(x: self.size.width/2 - 80, y: self.size.height / 2 - 95)
        successText.fontSize = 35
        successText.zPosition = 4
        addChild(successText)
        
    }
    
    
    /////////////////////////////////--- COLLISION ---///////////////////////////////////////////////////////////////////////////
    
    func didBegin(_ contact: SKPhysicsContact) {
        
        //handles collisions between player/enemy
        if contact.bodyA.node?.name == "player" && contact.bodyB.node?.name == "enemy" {
            //vibrate
            AudioServicesPlaySystemSound(1520)
            AudioServicesPlaySystemSound(1520)
            AudioServicesPlaySystemSound(1520)
            isGameOver = true;
            //stop player particles on death
            playerPart!.removeFromParent()
            afterCollisionFalse()
            
        }
        
        //handles collisions between player/goal
        if contact.bodyA.node?.name == "player" && contact.bodyB.node?.name == "goal" {
            //vibrate
            AudioServicesPlaySystemSound(1520)
            AudioServicesPlaySystemSound(1520)
            AudioServicesPlaySystemSound(1520)
            isGameOver = true;
            //stop player particles on death
            playerPart!.removeFromParent()
            afterCollisionTrue()
            
            //adds 1 to the success counter
            let currentSuccess = UserDefaults.standard.object(forKey: "success" + self.name!) as? Int
            UserDefaults.standard.set(currentSuccess! + 1, forKey: "success" + self.name!)
            
            levelCompletion = UserDefaults.standard.object(forKey: "levels") as! [Bool]
            levelCompletion[Int(self.name!)! - 1] = true
            UserDefaults.standard.set(levelCompletion, forKey: "levels")
        }
    }
    
    /////////////////////////////////--- UPDATE ---////////////////////////////////////////////////////////////////////////////
    
    //main
    override func update(_ currentTime: TimeInterval) {
        
        if !isGameOver {
            
            //increments frames every tick
            framecount += 1
            
            //sets playerParticle position to player position
            playerPart!.position = CGPoint(x: player.position.x, y: player.position.y)
            
            //determines velocity of player based on trig of angle and playerSpeed
            vx = cos(angle) * playerSpeedCur
            vy = sin(angle) * playerSpeedCur
            player.zRotation = angle
            player.position.x += vx
            player.position.y += vy
            
            //slows player down; friction; subtracts the players drag from their speed
            if playerSpeedCur - playerDrag >= 0 {
                playerSpeedCur -= playerDrag
            }
            
            //calls a function that checks to make sure player is within phone border
            checkInBounds()
            
            //calls enemy update; enumerates enemy children and creates enemy if timer calls for it
            enemyUpdate()
            
            goalUpdate()
            
            //removes items past bottom of screen
            removeItems()
            
            
            seconds = CGFloat(framecount)/60.0
        }
    }
    
    //all enemy update stuff parsed out
    func enemyUpdate() {
        let sceneNum = Int(self.name!)!
        //makes new enemy children
        enumerateChildNodes(withName: "enemy", using:{(enemy, stop)in
            let enemy = enemy as! SKSpriteNode
            if sceneNum > 0 && sceneNum <= 20 {
                enemy.position.y -= self.enemySpeed
            }
            else if sceneNum > 20 && sceneNum <= 40 {
                enemy.position.x += self.enemySpeed
            }
            else if sceneNum > 60 && sceneNum <= 80 {
                enemy.position.y -= self.enemySpeed
            }
            else if sceneNum > 80 && sceneNum <= 100 {
                enemy.position.y += self.enemySpeed
            }
        })
    }
    
    
    func goalUpdate() {
        let sceneNum = Int(self.name!)!
        //makes new enemy children
        enumerateChildNodes(withName: "goal", using:{(goal, stop)in
            let goal = goal as! SKSpriteNode
            if sceneNum > 0 && sceneNum <= 20 {
                goal.position.y -= self.goalSpeed
            }
            else if sceneNum > 20 && sceneNum <= 40 {
                goal.position.x += self.goalSpeed
            }
            else if sceneNum > 60 && sceneNum <= 80 {
                goal.position.y -= self.goalSpeed
            }
            else if sceneNum > 80 && sceneNum <= 100 {
                goal.position.y += self.goalSpeed
            }
            self.goalPart!.position = CGPoint(x: goal.position.x, y: goal.position.y)
        })
    }
    
    
    
    /////////////////////////////////--- TOUCH ---////////////////////////////////////////////////////////////////////////////
    
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        
        //vibrate
        AudioServicesPlaySystemSound(1520)
        
        //sets player speed cur to max
        playerSpeedCur = playerSpeedMax
        
        //takes first touch
        let touch = touches.first
        
        //pulls position out of touch
        let position = touch!.location(in:self)
        
        //determines distance between touch and player and then angle using trig
        let dx = position.x - player.position.x
        let dy = position.y - player.position.y
        angle = atan2(dy, dx)
    }
    
    
    
    
    
    /////////////////////////////////--- BOUNDS ---////////////////////////////////////////////////////////////////////////////
    
    //checks player
    func checkInBounds() {
        
        //right
        if player.position.x > self.frame.size.width / 2 - player.size.width / 2 {
            player.position.x = self.frame.size.width / 2 - player.size.width / 2
        }
        //left
        if player.position.x < -self.frame.size.width / 2 + player.size.width / 2 {
            player.position.x = -self.frame.size.width / 2 + player.size.width / 2
        }
        //top
        if player.position.y > self.frame.size.height / 2 - player.size.height / 2 {
            player.position.y = self.frame.size.height / 2 - player.size.height / 2
        }
        //bot
        if player.position.y < -self.frame.size.height / 2 + player.size.height / 2 {
            player.position.y = -self.frame.size.height / 2 + player.size.height / 2
        }
    }
    
    //removes all items that move over the bottom of the screen
    @objc func removeItems() {
        let sceneNum = Int(self.name!)!
        for child in children {
            if sceneNum > 80 && sceneNum <= 100 {
                if child.position.y > self.size.height / 2 + 50 {
                    //checks if goal passes end of screen and ends game if so
                    if child.name == "goal" {
                        isGameOver = true;
                        afterCollisionFalse()
                    }
                    child.removeFromParent()
                }
            }
            else {
                if child.position.y < -self.size.height / 2 - 50 || child.position.x > self.size.width / 2 + 50 {
                    //checks if goal passes end of screen and ends game if so
                    if child.name == "goal" {
                        isGameOver = true;
                        afterCollisionFalse()
                    }
                    child.removeFromParent()
                }
            }
        }
    }
    
    //after collision enemy
    func afterCollisionFalse() {
        let menuScene = SKScene(fileNamed: "GameEndLvl")!
        menuScene.scaleMode = .aspectFill
        view?.presentScene(menuScene, transition: SKTransition.fade(withDuration: TimeInterval(0.3)))
        Levels.currentLvl = self.name!
        setLvlTime()
    }
    
    //after collision goal
    func afterCollisionTrue() {
        let menuScene = SKScene(fileNamed: "GameEndLvlWin")!
        menuScene.scaleMode = .aspectFill
        view?.presentScene(menuScene, transition: SKTransition.fade(withDuration: TimeInterval(0.3)))
        setLvlTime()
    }
    
    //keeps track of time spent in levels
    func setLvlTime() {
        var lvlTimeCur = CGFloat(0.0)
        if UserDefaults.standard.object(forKey: "lvlTime") != nil {
            lvlTimeCur = UserDefaults.standard.object(forKey: "lvlTime") as! CGFloat
        }
        lvlTimeCur += seconds
        UserDefaults.standard.set(lvlTimeCur, forKey: "lvlTime")
    }
    
    //makes a list of CGPoints out of ints (for creating a list off enemy coords with reduntantly casting CGPoints
    func createEnemies(arr: [Int]) -> [CGPoint] {
        var i = 0
        var newArr: [CGPoint] = []
        while i < arr.count {
            newArr.append(CGPoint(x: arr[i], y: arr[i+1]))
            i += 2
        }
        return newArr
    }
}
